## Step 1 : Create an S3 Bucket
resource "random_id" "random_hex" {
  byte_length = 8
}

resource "aws_s3_bucket" "test_bucket" {
  bucket = format("%s-%s", var.bucket_name, random_id.random_hex.hex)
  acl    = var.acl
  tags = {
    Name        = "My bucket"
    Environment = "Dev"
  }
}

resource "aws_s3_bucket_versioning" "test_bucket_versioning" {
  bucket = aws_s3_bucket.test_bucket.id
  versioning_configuration {
    status = "Enabled"
  }
}

## Step 6: S3 Lifecycle Rules
#After 30 days of becoming noncurrent, the object versions are transitioned to STANDARD_IA for cheaper storage with less frequent access.
#After 60 days, they are moved to GLACIER for long-term, archival storage.
#After 90 days, these noncurrent object versions are deleted.

resource "aws_s3_bucket_lifecycle_configuration" "example" {
  bucket = aws_s3_bucket.test_bucket.id

  rule {
    id     = "config"
    status = "Enabled"

    filter {
      prefix = "config/"
    }

    noncurrent_version_transition {
      noncurrent_days = 30
      storage_class   = "STANDARD_IA"
    }

    noncurrent_version_transition {
      noncurrent_days = 60
      storage_class   = "GLACIER"
    }

    noncurrent_version_expiration {
      noncurrent_days = 90
    }
  }
  depends_on = [aws_s3_bucket_versioning.test_bucket_versioning]
}
## Step 7: S3 Bucket logging
# Store the server log generated by another bucket
resource "aws_s3_bucket" "log_bucket" {
  bucket = format("%s-%s", "my-demo-test-logging", random_id.random_hex.hex)
  tags = {
    Name        = "My log bucket"
    Environment = "Dev"
  }
}

resource "aws_s3_bucket_logging" "example" {
  bucket = aws_s3_bucket.test_bucket.id

  target_bucket = aws_s3_bucket.log_bucket.id
  target_prefix = "log/"
}
## Step 8 : Object locking in s3
#This means that once an object is uploaded to the bucket, it cannot be deleted or overwritten for at least 1 day
resource "aws_s3_bucket_object_lock_configuration" "example" {
  bucket = aws_s3_bucket.test_bucket.id

  rule {
    default_retention {
      mode = "COMPLIANCE"
      days = 1
    }
  }
}



